- name: Provision metricbeat and filebeat
  hosts: all
  vars:
    ansible_python_interpreter: auto
  pre_tasks:
    - name: Reboot host and wait restart to avoid DPKG lock bug
      become: true
      reboot:
        msg: "Reboot initiated by Ansible"
        connect_timeout: 10
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 60
        test_command: whoami
  tasks:
    - name: Add Elasticsearch Apt key
      become: true
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present
    - name: Add Elasticsearch repository.
      become: true
      apt_repository:
        repo: 'deb https://artifacts.elastic.co/packages/7.x/apt stable main'
        state: present
    - name: Install packages
      become: true
      apt: 
        name: 
          - elasticsearch
          - kibana
          - logstash
          - metricbeat
          - apm-server
        state: present
        update_cache: yes
    - name: Change Elasticsearch discovery type to 'single-node'
      become: true
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        line: "discovery.type: single-node"
    - name: Change Elasticsearch network host to '0.0.0.0'
      become: true
      lineinfile:
        path: /etc/elasticsearch/elasticsearch.yml
        line: "network.host: 0.0.0.0"
    - name: Copy input beats logstash
      become: true
      copy:
        src: ./configs/beats-input.conf
        dest: /etc/logstash/conf.d/02-beats-input.conf
    - name: Copy output elasticsearch logstash
      become: true
      copy:
        src: ./configs/elasticsearch-output.conf
        dest: /etc/logstash/conf.d/30-elasticsearch-output.conf
    - name: Kibana dismiss data not secure notification
      become: true
      lineinfile:
        path: /etc/kibana/kibana.yml
        line: "security.showInsecureClusterWarning: false"
    - name: Kibana add public base url
      become: true
      lineinfile:
        path: /etc/kibana/kibana.yml
        line: "server.publicBaseUrl: \"http://{{ aws_domain }}:8080\""
    - name: Enable elasticsearch service
      become: true
      service:
        name: elasticsearch
        enabled: true
        state: started  
    - name: Enable kibana service
      become: true
      service:
        name: kibana
        enabled: true
        state: started
    - name: Enable logstash service
      become: true
      service:
        name: logstash
        enabled: true
        state: started
### Metricbeat ###
    - name: Configure metricbeat
      become: true
      copy:
        src: ./configs/metricbeat.yml
        dest: /etc/metricbeat/metricbeat.yml
    - name: Loads metricbeat template 
      become: true
      shell: 
        cmd: metricbeat setup --index-management -E output.logstash.enabled=false -E 'output.elasticsearch.hosts=["localhost:9200"]'
    - name: Enable metricbeat service
      become: true
      service:
        name: metricbeat
        enabled: true
        state: started        
### APM Server ###
    - name: Configure APM Server
      become: true
      copy:
        src: ./configs/apm-server.yml
        dest: /etc/apm-server/apm-server.yml
    - name: Configure APM server ingest process
      become: true
      become_user: apm-server
      shell: 
        cmd: apm-server setup --pipelines
    - name: Enable APM server
      become: true
      service:
        name: "apm-server"
        state: started
        enabled: yes
## Nginx
    - name: Disable apache service if exist
      become: true
      service:
        name: apache2
        enabled: false
        state: stopped
      register: unused_disable
      failed_when: "unused_disable is failed and ('find' not in unused_disable.msg and 'found' not in unused_disable.msg)"
    - name: Install packages
      become: true
      apt: 
        name: 
          - nginx
        state: present
    - name: Delete default nginx configuration file
      become: true
      file:
        state: absent
        path: /etc/nginx/sites-available/default
    - name: Copy Nginx custom configuration as the default configuration
      become: true
      copy:
        src: ./configs/hello-nginx-conf
        dest: /etc/nginx/sites-available/default
    - name: Increase Nginx max body size
      become: true
      lineinfile:
        path: /etc/nginx/nginx.conf
        insertafter: '^http {'
        line: client_max_body_size 10M;
    - name: Validates new configuration
      become: true
      shell: 
        cmd: nginx -t
    - name: Reload nginx config
      become: true
      service:
        name: nginx
        enabled: true
        state: reloaded        